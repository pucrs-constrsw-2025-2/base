networks:
  constrsw:

volumes:
  constrsw-keycloak-data:
    external: true

services:
  keycloak:
    container_name: keycloak
    build:
      context: backend/utils/keycloak
      dockerfile: Dockerfile
    image: constrsw/keycloak
    environment:
      - KC_HEALTH_ENABLED=${KC_HEALTH_ENABLED}
      - KC_METRICS_ENABLED=${KC_METRICS_ENABLED}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    volumes:
      - constrsw-keycloak-data:/opt/keycloak/data
      - ./backend/utils/keycloak:/opt/keycloak/data/import
    networks:
      - constrsw
    ports:
      - ${KEYCLOAK_EXTERNAL_CONSOLE_PORT}:${KEYCLOAK_INTERNAL_CONSOLE_PORT}
    command: start-dev --import-realm
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f ${KEYCLOAK_INTERNAL_HOST}:${KEYCLOAK_INTERNAL_API_PORT}/health" ]
      start_period: 300s
      interval: 10s
      timeout: 10s
      retries: 50

  go-app:
    container_name: go-app
    build:
      context: backend/oauth
      dockerfile: Dockerfile
    image: constrsw/go-app
    environment:
      - KEYCLOAK_INTERNAL_HOST=${KEYCLOAK_INTERNAL_HOST}
      - KEYCLOAK_INTERNAL_API_PORT=${KEYCLOAK_INTERNAL_API_PORT}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - KEYCLOAK_GRANT_TYPE=${KEYCLOAK_GRANT_TYPE}
    ports:
      - "${GO_APP_EXTERNAL_PORT}:${GO_APP_INTERNAL_PORT}"
    networks:
      - constrsw
    depends_on:
      - keycloak
    restart: unless-stopped
