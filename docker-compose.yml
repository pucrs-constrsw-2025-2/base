networks:
  constrsw:

volumes:
  # No terminal, criar o volume externo: docker volume create constrsw-keycloak-data
  constrsw-keycloak-data:
    external: true

services:
  keycloak:
    container_name: ${KEYCLOAK_CONTAINER_NAME}
    build:
      context: ${KEYCLOAK_BUILD_CONTEXT}
      dockerfile: ${KEYCLOAK_DOCKERFILE}
    image: ${KEYCLOAK_IMAGE}
    environment:
      - KC_HEALTH_ENABLED=${KC_HEALTH_ENABLED}
      - KC_METRICS_ENABLED=${KC_METRICS_ENABLED}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    volumes:
      - ${KEYCLOAK_VOLUME_DATA}:/opt/keycloak/data
      - ${KEYCLOAK_VOLUME_IMPORT}:/opt/keycloak/data/import
    networks:
      - constrsw
    ports:
      - ${KEYCLOAK_EXTERNAL_CONSOLE_PORT}:${KEYCLOAK_INTERNAL_CONSOLE_PORT}
    command: ${KEYCLOAK_COMMAND}
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f ${KEYCLOAK_INTERNAL_PROTOCOL}://${KEYCLOAK_INTERNAL_HOST}:${KEYCLOAK_INTERNAL_API_PORT}/health || exit 1" ]
      start_period: ${KEYCLOAK_HEALTHCHECK_START_PERIOD}
      interval: ${KEYCLOAK_HEALTHCHECK_INTERVAL}
      timeout: ${KEYCLOAK_HEALTHCHECK_TIMEOUT}
      retries: ${KEYCLOAK_HEALTHCHECK_RETRIES}

  oauth:
    container_name: ${OAUTH2_PROXY_CONTAINER_NAME}
    image: ${OAUTH2_PROXY_IMAGE}
    depends_on:
      - keycloak
    networks:
      - constrsw
    ports:
      - ${OAUTH2_PROXY_EXTERNAL_PORT}:${OAUTH2_PROXY_INTERNAL_PORT}
    environment:
      - OAUTH2_PROXY_PROVIDER=${OAUTH2_PROXY_PROVIDER}
      - OAUTH2_PROXY_OIDC_ISSUER_URL=${OAUTH2_PROXY_OIDC_ISSUER_URL}
      - OAUTH2_PROXY_REDIRECT_URL=${OAUTH2_PROXY_REDIRECT_URL}
      - OAUTH2_PROXY_UPSTREAMS=${OAUTH2_PROXY_UPSTREAMS}
      - OAUTH2_PROXY_CLIENT_ID=${OAUTH2_PROXY_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${OAUTH2_PROXY_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}
      - OAUTH2_PROXY_EMAIL_DOMAINS=${OAUTH2_PROXY_EMAIL_DOMAINS}
      - OAUTH2_PROXY_SCOPE=${OAUTH2_PROXY_SCOPE}
      - OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER=${OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER}
      - OAUTH2_PROXY_SET_AUTHORIZATION_HEADER=${OAUTH2_PROXY_SET_AUTHORIZATION_HEADER}
      - OAUTH2_PROXY_SET_XAUTHREQUEST=${OAUTH2_PROXY_SET_XAUTHREQUEST}
      - OAUTH2_PROXY_HTTP_ADDRESS=${OAUTH2_PROXY_HTTP_ADDRESS}
      - OAUTH2_PROXY_REVERSE_PROXY=${OAUTH2_PROXY_REVERSE_PROXY}
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:${OAUTH2_PROXY_INTERNAL_PORT}/oauth2/sign_in || exit 1" ]
      interval: ${OAUTH2_PROXY_HEALTHCHECK_INTERVAL}
      timeout: ${OAUTH2_PROXY_HEALTHCHECK_TIMEOUT}
      retries: ${OAUTH2_PROXY_HEALTHCHECK_RETRIES}
