server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Configuração para SPA (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
        
        # --- INÍCIO DA CORREÇÃO ---

        # Tratar requisições OPTIONS (CORS pre-flight)
        # Este bloco FOI MOVIDO para DENTRO do "location /"
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type 'text/plain; charset=utf-8' always;
            add_header Content-Length 0 always;
            return 204; # 'return' também deve estar dentro de um location
        }

        # Headers de segurança
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Adiciona o header CORS para as requisições REAIS (GET, POST, etc.)
        # Sem isso, o pre-flight (OPTIONS) passa, mas a requisição real falha.
        add_header Access-Control-Allow-Origin "*" always;
        
        # --- FIM DA CORREÇÃO ---
    }

    # Cache para assets estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Headers de segurança para assets
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # O bloco "if" que estava aqui foi removido e movido para "location /"
}