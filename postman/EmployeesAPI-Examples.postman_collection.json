{
	"info": {
		"_postman_id": "employees-api-examples-collection",
		"name": "Employees API - Detailed Examples",
		"description": "Exemplos detalhados de uso da API de funcionários com diferentes cenários",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Employee Scenarios",
			"item": [
				{
					"name": "Create Employee - Minimal Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contractNumber\": 12346,\n  \"name\": \"Maria Santos\",\n  \"role\": \"Analista\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees"
							]
						},
						"description": "Criar funcionário com apenas os campos obrigatórios"
					},
					"response": []
				},
				{
					"name": "Create Employee - Complete Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contractNumber\": 12347,\n  \"name\": \"Carlos Oliveira\",\n  \"role\": \"Gerente de Projetos\",\n  \"salary\": 12000.00,\n  \"organizationalUnit\": \"Gestão\",\n  \"room\": {\n    \"idRoom\": \"550e8400-e29b-41d4-a716-446655440001\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees"
							]
						},
						"description": "Criar funcionário com todos os campos preenchidos"
					},
					"response": []
				},
				{
					"name": "Search by Contract Number",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees?search=12345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees"
							],
							"query": [
								{
									"key": "search",
									"value": "12345",
									"description": "Buscar por número do contrato"
								}
							]
						},
						"description": "Buscar funcionário por número do contrato"
					},
					"response": []
				},
				{
					"name": "Search by Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees?search=João",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees"
							],
							"query": [
								{
									"key": "search",
									"value": "João",
									"description": "Buscar por nome"
								}
							]
						},
						"description": "Buscar funcionário por nome"
					},
					"response": []
				},
				{
					"name": "Search by Organizational Unit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees?search=TI",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees"
							],
							"query": [
								{
									"key": "search",
									"value": "TI",
									"description": "Buscar por unidade organizacional"
								}
							]
						},
						"description": "Buscar funcionários por unidade organizacional"
					},
					"response": []
				},
				{
					"name": "Update Only Salary",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"salary\": 9500.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}"
							]
						},
						"description": "Atualizar apenas o salário do funcionário"
					},
					"response": []
				},
				{
					"name": "Update Only Organizational Unit",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"organizationalUnit\": \"Desenvolvimento\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}"
							]
						},
						"description": "Atualizar apenas a unidade organizacional"
					},
					"response": []
				},
				{
					"name": "Update Only Room",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"room\": {\n    \"idRoom\": \"550e8400-e29b-41d4-a716-446655440002\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}"
							]
						},
						"description": "Atualizar apenas a sala do funcionário"
					},
					"response": []
				}
			],
			"description": "Cenários específicos para funcionários"
		},
		{
			"name": "Task Scenarios",
			"item": [
				{
					"name": "Create Task - Basic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Implementar nova funcionalidade de relatórios\",\n  \"startDate\": \"2024-03-01\",\n  \"expectedEndDate\": \"2024-03-31\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks"
							]
						},
						"description": "Criar tarefa básica sem data de conclusão"
					},
					"response": []
				},
				{
					"name": "Create Task - With Completion Date",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Corrigir bugs identificados na versão anterior\",\n  \"startDate\": \"2024-02-01\",\n  \"expectedEndDate\": \"2024-02-15\",\n  \"actualEndDate\": \"2024-02-12\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks"
							]
						},
						"description": "Criar tarefa já concluída"
					},
					"response": []
				},
				{
					"name": "Search Tasks by Description",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks?description=relatórios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks"
							],
							"query": [
								{
									"key": "description",
									"value": "relatórios",
									"description": "Buscar tarefas por descrição"
								}
							]
						},
						"description": "Buscar tarefas que contenham 'relatórios' na descrição"
					},
					"response": []
				},
				{
					"name": "Filter Tasks by Start Date Range",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks?startDate=2024-01-01&endDate=2024-03-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-01-01",
									"description": "Data de início do período"
								},
								{
									"key": "endDate",
									"value": "2024-03-31",
									"description": "Data de fim do período"
								}
							]
						},
						"description": "Filtrar tarefas por período de início"
					},
					"response": []
				},
				{
					"name": "Filter Tasks by Expected End Date Range",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks?startDate=2024-02-01&endDate=2024-04-30",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-02-01",
									"description": "Data de início do período"
								},
								{
									"key": "endDate",
									"value": "2024-04-30",
									"description": "Data de fim do período"
								}
							]
						},
						"description": "Filtrar tarefas por período de fim esperado"
					},
					"response": []
				},
				{
					"name": "Update Task Description Only",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Implementar nova funcionalidade de relatórios com melhorias de performance\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Atualizar apenas a descrição da tarefa"
					},
					"response": []
				},
				{
					"name": "Mark Task as Completed",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"actualEndDate\": \"2024-03-25\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Marcar tarefa como concluída"
					},
					"response": []
				},
				{
					"name": "Update Task Dates",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"startDate\": \"2024-03-05\",\n  \"expectedEndDate\": \"2024-04-05\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Atualizar datas da tarefa"
					},
					"response": []
				}
			],
			"description": "Cenários específicos para tarefas"
		},
		{
			"name": "Error Scenarios",
			"item": [
				{
					"name": "Create Employee - Duplicate Contract",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contractNumber\": 12345,\n  \"name\": \"João Silva Duplicado\",\n  \"role\": \"Desenvolvedor\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees"
							]
						},
						"description": "Tentar criar funcionário com número de contrato duplicado"
					},
					"response": [
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contractNumber\": 12345,\n  \"name\": \"João Silva Duplicado\",\n  \"role\": \"Desenvolvedor\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/employees",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employees"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"Employee with contract number 12345 already exists\",\n  \"code\": \"DUPLICATE_CONTRACT_NUMBER\",\n  \"timestamp\": \"2024-01-01T12:00:00\"\n}"
						}
					]
				},
				{
					"name": "Create Employee - Missing Required Fields",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contractNumber\": 12348\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees"
							]
						},
						"description": "Tentar criar funcionário sem campos obrigatórios"
					},
					"response": [
						{
							"name": "Validation Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contractNumber\": 12348\n}"
								},
								"url": {
									"raw": "{{base_url}}/employees",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employees"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"Validation failed\",\n  \"code\": \"VALIDATION_ERROR\",\n  \"timestamp\": \"2024-01-01T12:00:00\",\n  \"details\": {\n    \"name\": \"Name is required\",\n    \"role\": \"Role is required\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get Employee - Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Tentar obter funcionário inexistente"
					},
					"response": [
						{
							"name": "Not Found Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/employees/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employees",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"Employee not found with id: 00000000-0000-0000-0000-000000000000\",\n  \"code\": \"EMPLOYEE_NOT_FOUND\",\n  \"timestamp\": \"2024-01-01T12:00:00\"\n}"
						}
					]
				},
				{
					"name": "Create Task - Invalid Date Format",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Tarefa com data inválida\",\n  \"startDate\": \"01/03/2024\",\n  \"expectedEndDate\": \"31/03/2024\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/employees/{{employee_id}}/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"{{employee_id}}",
								"tasks"
							]
						},
						"description": "Tentar criar tarefa com formato de data inválido"
					},
					"response": []
				}
			],
			"description": "Cenários de erro e validação"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Generate random contract numbers for testing",
					"if (pm.info.requestName.includes('Create Employee')) {",
					"    const randomContract = Math.floor(Math.random() * 90000) + 10000;",
					"    pm.environment.set('random_contract', randomContract);",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test response status codes",
					"pm.test('Response status code is valid', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204, 400, 404, 409, 500]);",
					"});",
					"",
					"// Test response time",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"// Test response headers",
					"pm.test('Response has Content-Type header', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});",
					"",
					"// Auto-extract IDs from successful responses",
					"if (pm.response.code === 201 || pm.response.code === 200) {",
					"    const responseJson = pm.response.json();",
					"    ",
					"    if (responseJson.id) {",
					"        if (pm.info.requestName.includes('Employee')) {",
					"            pm.environment.set('employee_id', responseJson.id);",
					"        } else if (pm.info.requestName.includes('Task')) {",
					"            pm.environment.set('task_id', responseJson.id);",
					"        }",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080/api/v1",
			"type": "string"
		}
	]
}

