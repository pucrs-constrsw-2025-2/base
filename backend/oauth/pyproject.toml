[tool.poetry]
name = "oauth-api"
version = "0.1.0"
description = "Keycloak API Gateway em conformidade com o T1 de ConstrSW."
authors = ["AndreiRech <andreirech22@outlook.com>", "eduardo-de-bastiani <eduardocolladebastiani@gmail.com>", "erikvsuris <erikvsuris@gmail.com>", "shimpas-ville <cadu2001moraes@gmail.com>"]
readme = "README.md"
packages = [{include = "oauth_api"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
pydantic = {extras = ["email"], version = "^2.7.1"}
pydantic-settings = "^2.2.1"
httpx = "^0.27.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
cachetools = "^5.3.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
ruff = "^0.4.2"
black = "^24.4.2"
mypy = "^1.9.0"
pre-commit = "^3.7.0"
respx = "^0.20.2"
taskipy = "^1.14.1"
pysonar = "^1.1.0.2035"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.main.api"

[tool.ruff]
line-length = 88
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ["E", "W", "F", "I", "C", "B", "UP", "N", "S", "A", "T20"]
ignore = ["S101"] # Ignora 'assert' usado em testes

[tool.black]
line-length = 88

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.taskipy.tasks]
run = 'uvicorn oauth_api.main:app --reload'
lint = 'ruff check .'
format = 'ruff check . --fix ; ruff format .'
test = 'pytest'
sonar = """pysonar \
  --sonar-host-url=http://localhost:9000 \
  --sonar-token=sqa_780b95691a214615c2365f804b73e7821f3de6af \
  --sonar-project-key=constrsw-lessons-service"""
